stages:
  - lint
  - test
  - sonarqube

services:
  - postgres:12-alpine
variables:
  POSTGRES_DB: postgres
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: "postgres"

Lint:
  stage: lint
  image: python:3.7
  script:
    - apt-get update -qy
    - apt-get install -y python-dev python-pip
    - pip install -r requirements.txt
    - pylint --load-plugins=pylint_django --rcfile=.pylintrc  admin kesbangpol opd user -r n --exit-zero > pylint_report.txt
  artifacts:
    untracked: true
    expire_in: 1 day
    paths:
      - pylint_report.txt

Test:
  stage: test
  image: python:3.7
  before_script:
    - apt-get update -qy
  script:
    - apt-get install -y python-dev python-pip
    - pip install -r requirements.txt
    - coverage run --source='.' manage.py test
    - coverage xml -i
    - coverage report
  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+%)/'
  artifacts:
    untracked: true
    expire_in: 1 day
    paths:
      - coverage.xml
      - pylint_report.txt

SonarScanner:
  stage: sonarqube
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
      -Dsonar.host.url=$SONARQUBE_HOST
      -Dsonar.login=$SONARQUBE_TOKEN
      -Dsonar.projectKey=$SONARQUBE_PROJECT_KEY
      -Dsonar.branch.name=$CI_COMMIT_REF_NAME
      -Dsonar.python.coverage.reportPaths=coverage.xml
      -Dsonar.python.pylint.reportPath=pylint_report.txt
  dependencies:
    - Lint
    - Test
