stages:
  - lint
  - test
  - sonarqube
  - deploy_staging

services:
  - postgres:12-alpine
variables:
  POSTGRES_DB: postgres
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: "postgres"
  DOCKER_DRIVER: overlay2

Lint:
  stage: lint
  image: python:3.7
  script:
    - apt-get update -qy
    - apt-get install -y python-dev python-pip
    - pip install -r requirements.txt
    - pylint --load-plugins=pylint_django --rcfile=.pylintrc  admin kesbangpol opd user -r n --exit-zero > pylint_report.txt
  artifacts:
    untracked: true
    expire_in: 1 hour
    paths:
      - pylint_report.txt

Test:
  stage: test
  image: python:3.7
  before_script:
    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
    - echo "deb http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google.list
    - apt-get update -qq && apt-get install -y -qq unzip
    - apt-get install -y google-chrome-stable
    - apt-get install -y xvfb
    - wget https://chromedriver.storage.googleapis.com/2.43/chromedriver_linux64.zip
    - unzip -o chromedriver_linux64.zip
    - mkdir /masif_uploaded_files
  script:
    - apt-get install -y python-dev python-pip
    - pip install -r requirements.txt
    - python manage.py makemigrations
    - python manage.py migrate
    - coverage run --source='.' manage.py test
    - coverage xml -i
    - coverage report
  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+%)/'
  artifacts:
    untracked: true
    expire_in: 1 hour
    paths:
      - coverage.xml
      - pylint_report.txt

SonarScanner:
  stage: sonarqube
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
      -Dsonar.host.url=$SONARQUBE_HOST
      -Dsonar.login=$SONARQUBE_TOKEN
      -Dsonar.projectKey=$SONARQUBE_PROJECT_KEY
      -Dsonar.branch.name=$CI_COMMIT_REF_NAME
      -Dsonar.python.coverage.reportPaths=coverage.xml
      -Dsonar.python.pylint.reportPath=pylint_report.txt
  dependencies:
    - Lint
    - Test

Staging:
  stage: deploy_staging
  image: ubuntu:latest
  before_script:
    - apt-get update -y
    - apt-get install openssh-server -y
    - pwd && ls -a
    - chmod 600 .ssh/dev_team.pem
    - ssh -i .ssh/dev_team.pem ec2-user@ec2-3-0-51-204.ap-southeast-1.compute.amazonaws.com
  script:
    - cd abang-abang-masif/ && git pull origin staging
    - docker-compose up -d
